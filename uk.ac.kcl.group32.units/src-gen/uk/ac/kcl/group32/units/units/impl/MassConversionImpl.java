/**
 * generated by Xtext 2.24.0
 */
package uk.ac.kcl.group32.units.units.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import uk.ac.kcl.group32.units.units.IntExpression;
import uk.ac.kcl.group32.units.units.MassConversion;
import uk.ac.kcl.group32.units.units.MassUnits;
import uk.ac.kcl.group32.units.units.UnitsPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Mass Conversion</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link uk.ac.kcl.group32.units.units.impl.MassConversionImpl#getMassValue <em>Mass Value</em>}</li>
 *   <li>{@link uk.ac.kcl.group32.units.units.impl.MassConversionImpl#getInitialMassValue <em>Initial Mass Value</em>}</li>
 *   <li>{@link uk.ac.kcl.group32.units.units.impl.MassConversionImpl#getConvertedMassValue <em>Converted Mass Value</em>}</li>
 * </ul>
 *
 * @generated
 */
public class MassConversionImpl extends StatementsImpl implements MassConversion
{
  /**
   * The cached value of the '{@link #getMassValue() <em>Mass Value</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMassValue()
   * @generated
   * @ordered
   */
  protected IntExpression massValue;

  /**
   * The default value of the '{@link #getInitialMassValue() <em>Initial Mass Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInitialMassValue()
   * @generated
   * @ordered
   */
  protected static final MassUnits INITIAL_MASS_VALUE_EDEFAULT = MassUnits.KG;

  /**
   * The cached value of the '{@link #getInitialMassValue() <em>Initial Mass Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInitialMassValue()
   * @generated
   * @ordered
   */
  protected MassUnits initialMassValue = INITIAL_MASS_VALUE_EDEFAULT;

  /**
   * The default value of the '{@link #getConvertedMassValue() <em>Converted Mass Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConvertedMassValue()
   * @generated
   * @ordered
   */
  protected static final MassUnits CONVERTED_MASS_VALUE_EDEFAULT = MassUnits.KG;

  /**
   * The cached value of the '{@link #getConvertedMassValue() <em>Converted Mass Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConvertedMassValue()
   * @generated
   * @ordered
   */
  protected MassUnits convertedMassValue = CONVERTED_MASS_VALUE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MassConversionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return UnitsPackage.Literals.MASS_CONVERSION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public IntExpression getMassValue()
  {
    return massValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMassValue(IntExpression newMassValue, NotificationChain msgs)
  {
    IntExpression oldMassValue = massValue;
    massValue = newMassValue;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, UnitsPackage.MASS_CONVERSION__MASS_VALUE, oldMassValue, newMassValue);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMassValue(IntExpression newMassValue)
  {
    if (newMassValue != massValue)
    {
      NotificationChain msgs = null;
      if (massValue != null)
        msgs = ((InternalEObject)massValue).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - UnitsPackage.MASS_CONVERSION__MASS_VALUE, null, msgs);
      if (newMassValue != null)
        msgs = ((InternalEObject)newMassValue).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - UnitsPackage.MASS_CONVERSION__MASS_VALUE, null, msgs);
      msgs = basicSetMassValue(newMassValue, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, UnitsPackage.MASS_CONVERSION__MASS_VALUE, newMassValue, newMassValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MassUnits getInitialMassValue()
  {
    return initialMassValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setInitialMassValue(MassUnits newInitialMassValue)
  {
    MassUnits oldInitialMassValue = initialMassValue;
    initialMassValue = newInitialMassValue == null ? INITIAL_MASS_VALUE_EDEFAULT : newInitialMassValue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, UnitsPackage.MASS_CONVERSION__INITIAL_MASS_VALUE, oldInitialMassValue, initialMassValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MassUnits getConvertedMassValue()
  {
    return convertedMassValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setConvertedMassValue(MassUnits newConvertedMassValue)
  {
    MassUnits oldConvertedMassValue = convertedMassValue;
    convertedMassValue = newConvertedMassValue == null ? CONVERTED_MASS_VALUE_EDEFAULT : newConvertedMassValue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, UnitsPackage.MASS_CONVERSION__CONVERTED_MASS_VALUE, oldConvertedMassValue, convertedMassValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case UnitsPackage.MASS_CONVERSION__MASS_VALUE:
        return basicSetMassValue(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case UnitsPackage.MASS_CONVERSION__MASS_VALUE:
        return getMassValue();
      case UnitsPackage.MASS_CONVERSION__INITIAL_MASS_VALUE:
        return getInitialMassValue();
      case UnitsPackage.MASS_CONVERSION__CONVERTED_MASS_VALUE:
        return getConvertedMassValue();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case UnitsPackage.MASS_CONVERSION__MASS_VALUE:
        setMassValue((IntExpression)newValue);
        return;
      case UnitsPackage.MASS_CONVERSION__INITIAL_MASS_VALUE:
        setInitialMassValue((MassUnits)newValue);
        return;
      case UnitsPackage.MASS_CONVERSION__CONVERTED_MASS_VALUE:
        setConvertedMassValue((MassUnits)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case UnitsPackage.MASS_CONVERSION__MASS_VALUE:
        setMassValue((IntExpression)null);
        return;
      case UnitsPackage.MASS_CONVERSION__INITIAL_MASS_VALUE:
        setInitialMassValue(INITIAL_MASS_VALUE_EDEFAULT);
        return;
      case UnitsPackage.MASS_CONVERSION__CONVERTED_MASS_VALUE:
        setConvertedMassValue(CONVERTED_MASS_VALUE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case UnitsPackage.MASS_CONVERSION__MASS_VALUE:
        return massValue != null;
      case UnitsPackage.MASS_CONVERSION__INITIAL_MASS_VALUE:
        return initialMassValue != INITIAL_MASS_VALUE_EDEFAULT;
      case UnitsPackage.MASS_CONVERSION__CONVERTED_MASS_VALUE:
        return convertedMassValue != CONVERTED_MASS_VALUE_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (initialMassValue: ");
    result.append(initialMassValue);
    result.append(", convertedMassValue: ");
    result.append(convertedMassValue);
    result.append(')');
    return result.toString();
  }

} //MassConversionImpl
