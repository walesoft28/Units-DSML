/*
 * generated by Xtext 2.24.0
 */
package uk.ac.kcl.group32.units.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import uk.ac.kcl.group32.units.units.Units
import uk.ac.kcl.group32.units.units.MassConversion
import uk.ac.kcl.group32.units.units.LengthConversion
import uk.ac.kcl.group32.units.units.TimeConversion
import uk.ac.kcl.group32.units.units.VariableDeclaration

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class UnitsGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		val model = resource.contents.head as Units
		
		fsa.generateFile(deriveTargetFilenameFor(model, resource), model.generate)
	}
	
	def deriveTargetFilenameFor(Units units, Resource resource) {
		resource.URI.appendFileExtension('txt').lastSegment
	}
	
	def generate(Units units) '''
		Your Units program contains:
		
		- «units.eAllContents.filter(MassConversion).size» mass conversion statements
		- «units.eAllContents.filter(LengthConversion).size» length conversion statements
		- «units.eAllContents.filter(TimeConversion).size» time conversion statements and
		- «units.eAllContents.filter(VariableDeclaration).size» variable declaration statements
	'''
	
}
